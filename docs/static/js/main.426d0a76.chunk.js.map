{"version":3,"sources":["components/Logo/Logo.js","components/Search/Search.js","components/Item/Item.js","helpers/getResults.js","components/Results/Results.js","hooks/useGetResults.js","Gifinder.js","index.js"],"names":["Logo","setQueries","className","title","onClick","Search","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","queries","type","value","onChange","target","Item","url","src","alt","getResults","query","a","fetch","encodeURI","response","json","data","results","map","item","id","images","fixed_height","console","error","Results","loading","state","setState","useEffect","then","useGetResults","Gifinder","ReactDOM","render","document","getElementById"],"mappings":"6NAIaA,EAAO,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAClB,OACI,qBAAKC,UAAU,uBAAf,SACI,qBAAKA,UAAU,qBAAf,SACI,qBACIA,UAAU,6BACVC,MAAM,mBACNC,QAAS,kBAAMH,EAAW,KAH9B,UAKI,sBAAMC,UAAU,eAAhB,eACA,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,eAAhB,eACA,sBAAMA,UAAU,eAAhB,eACA,sBAAMA,UAAU,eAAhB,eACA,sBAAMA,UAAU,cAAhB,eACA,sBAAMA,UAAU,eAAhB,eACA,sBAAMA,UAAU,eAAhB,uB,OCjBPG,EAAS,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,WAAiB,EAGFK,mBAAS,IAHP,mBAG/BC,EAH+B,KAGnBC,EAHmB,KAetC,OACI,qBAAKN,UAAU,eAAf,SACI,qBAAKA,UAAU,yEAAf,SACI,uBAAMO,SAXO,SAAAC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BZ,GAAW,SAAAa,GAAO,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOwBN,UAAU,cAA5C,UACI,uBACIa,KAAK,OACLC,MAAOT,EACPU,SAlBM,SAAAP,GAAC,OAAIF,EAAcE,EAAEQ,OAAOF,QAmBlCd,UAAU,iCAEd,wBAAQa,KAAK,SAASb,UAAU,0BAAhC,4B,QC5BPiB,EAAO,SAAC,GAAkB,IAAjBhB,EAAgB,EAAhBA,MAAOiB,EAAS,EAATA,IACzB,OACI,qBAAKlB,UAAU,0BAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBACImB,IAAKD,EACLlB,UAAU,gCACVoB,IAAKnB,S,uBCPZoB,EAAU,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DACP,mCADO,kBAGKC,MACnB,oDACMC,UAAUH,IADhB,8BAHO,qCADO,cAGZI,EAHY,gBASKA,EAASC,OATd,uBASVC,EATU,EASVA,KACFC,EAAUD,EAAKE,KAAI,SAAAC,GACrB,MAAO,CACHC,GAAID,EAAKC,GACT/B,MAAO8B,EAAK9B,MACZiB,IAAKa,EAAKE,OAAOC,aAAahB,QAdpB,kBAiBXW,GAjBW,kCAmBlBM,QAAQC,MAAR,MAnBkB,0DAAH,sDCKVC,G,MAAU,SAAC,GAAe,IAAbf,EAAY,EAAZA,MAAY,ECFT,SAACA,GAAW,IAAD,EACVlB,mBAAS,CAAEkC,SAAS,EAAMT,QAAS,KADzB,mBAC7BU,EAD6B,KACtBC,EADsB,KASpC,OANAC,qBAAU,WACNpB,EAAWC,GAAOoB,MAAK,SAAAb,GACnBW,EAAS,CAAEF,SAAS,EAAOT,QAASA,SAEzC,CAACP,IAEGiB,EDLsBI,CAAcrB,GAAnCgB,EAF0B,EAE1BA,QAAST,EAFiB,EAEjBA,QAEjB,OACI,sBAAK7B,UAAU,gBAAf,UACI,oBAAGA,UAAU,oDAAb,0BAA8E,uBAAMA,UAAU,aAAhB,cAA+BsB,EAA/B,UAC5EgB,GAAW,mBAAGtC,UAAU,+DAAb,wBACX6B,EAAQC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,eAAwBA,GAAbA,EAAKC,YERrCY,EAAW,WAAM,MAGIxC,mBAAS,IAHb,mBAGnBQ,EAHmB,KAGVb,EAHU,KAK1B,OACI,qCACI,cAAC,EAAD,CAAMA,WAAYA,IAClB,cAAC,EAAD,CAAQA,WAAYA,IACnBa,EAAQkB,KAAI,SAAAR,GAAK,OAAI,cAAC,EAAD,CAAqBA,MAAOA,GAAdA,UCXhDuB,IAASC,OAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,W","file":"static/js/main.426d0a76.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport './Logo.css';\r\n\r\nexport const Logo = ({setQueries}) => {\r\n    return (\r\n        <div className=\"c-logo row mt-5 mb-3\">\r\n            <div className=\"col-12 text-center\">\r\n                <h1 \r\n                    className=\"c-logo__text d-inline-flex\"\r\n                    title=\"Restart searches\"\r\n                    onClick={() => setQueries([])}\r\n                >\r\n                    <span className=\"text-primary\">G</span>\r\n                    <span className=\"text-danger\">i</span>\r\n                    <span className=\"text-warning\">f</span>\r\n                    <span className=\"text-success\">i</span>\r\n                    <span className=\"text-primary\">n</span>\r\n                    <span className=\"text-danger\">d</span>\r\n                    <span className=\"text-warning\">e</span>\r\n                    <span className=\"text-success\">r</span>\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nLogo.propTypes = {\r\n    setQueries: PropTypes.func.isRequired\r\n}\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Search = ({ setQueries }) => {\r\n\r\n    // State for the input\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = e => setinputValue(e.target.value);\r\n\r\n    // State for the queries\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setQueries(queries => [inputValue, ...queries]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"c-search row\">\r\n            <div className=\"col-12 offset-sm-1 col-sm-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6\">\r\n                <form onSubmit={handleFormSubmit} className=\"input-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={inputValue}\r\n                        onChange={handleInputChange}\r\n                        className=\"form-control form-control-lg\"\r\n                    />\r\n                    <button type=\"submit\" className=\"btn btn-outline-primary\">Search</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearch.propTypes = {\r\n    setQueries: PropTypes.func.isRequired\r\n}\r\n","export const Item = ({title, url}) => {\r\n    return (\r\n        <div className=\"col-6 col-sm-4 col-lg-2\">\r\n            <div className=\"card mb-4\">\r\n                <img\r\n                    src={url}\r\n                    className=\"c-results__image card-img-top\"\r\n                    alt={title}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const getResults = async (query) => {\r\n    const apiKey = 'FOdOsx0AnBvT9LlItPhNryUhL3v5RHUu';\r\n    try {\r\n        const response = await fetch(\r\n            `https://api.giphy.com/v1/gifs/search` +\r\n            `?q=${encodeURI(query)}` +\r\n            `&limit=6` +\r\n            `&api_key=${apiKey}`\r\n        );\r\n        const { data } = await response.json();\r\n        const results = data.map(item => {\r\n            return {\r\n                id: item.id,\r\n                title: item.title,\r\n                url: item.images.fixed_height.url\r\n            };\r\n        })\r\n        return results;\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}\r\n","import { Item } from '../Item/Item';\r\nimport { useGetResults } from '../../hooks/useGetResults';\r\n\r\nimport './Results.css';\r\n\r\nexport const Results = ({ query }) => {\r\n\r\n    const { loading, results } = useGetResults(query);\r\n\r\n    return (\r\n        <div className=\"c-results row\">\r\n            <p className=\"mt-4 text-muted animate__animated animate__fadeIn\">Results for: <span className=\"fst-italic\">\"{query}\"</span></p>\r\n            { loading && <p className=\"mt-4 text-muted text-center animate__animated animate__flash\">Loading...</p> }\r\n            { results.map(item => <Item key={item.id} {...item} />)}\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getResults } from '../helpers/getResults';\r\n\r\nexport const useGetResults = (query) => {\r\n    const [state, setState] = useState({ loading: true, results: [] });\r\n\r\n    useEffect(() => {\r\n        getResults(query).then(results => {\r\n            setState({ loading: false, results: results })\r\n        })\r\n    }, [query]);\r\n\r\n    return state;\r\n}\r\n","import { useState } from 'react';\r\nimport { Logo } from './components/Logo/Logo';\r\nimport { Search } from './components/Search/Search';\r\nimport { Results } from './components/Results/Results';\r\n\r\nexport const Gifinder = () => {\r\n\r\n    // State for the queries\r\n    const [queries, setQueries] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <Logo setQueries={setQueries} />\r\n            <Search setQueries={setQueries} />\r\n            {queries.map(query => <Results key={query} query={query} />)}\r\n        </>\r\n    );\r\n}\r\n","import ReactDOM from 'react-dom';\nimport { Gifinder } from './Gifinder';\n\nReactDOM.render(<Gifinder />, document.getElementById('root'));\n"],"sourceRoot":""}